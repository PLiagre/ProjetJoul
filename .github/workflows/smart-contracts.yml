name: Smart Contracts CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'
        
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: npm-

    - name: Install backend dependencies
      run: npm ci
        
    - name: Run hardhat compile
      run: npx hardhat compile
      
    - name: Run tests
      run: npx hardhat test --network hardhat
      
    - name: Run solhint
      run: npx solhint 'contracts/**/*.sol'

  frontend:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'
        
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: npm-

    - name: Install frontend dependencies
      run: npm ci
        
    - name: Build frontend
      run: npm run build
      env:
        NEXT_PUBLIC_PINATA_API_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_API_KEY }}
        NEXT_PUBLIC_PINATA_SECRET_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_SECRET_KEY }}

  # DÃ©ploiement optionnel sur testnet
  deploy-testnet:
    needs: [test, frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Seulement sur main
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Deploy to Polygon Amoy
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ENEDIS_ADDRESS: ${{ secrets.ENEDIS_ADDRESS }}
        POOL_ADDRESS: ${{ secrets.POOL_ADDRESS }}
        NEXT_PUBLIC_PINATA_API_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_API_KEY }}
        NEXT_PUBLIC_PINATA_SECRET_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_SECRET_KEY }}
      run: npx hardhat run scripts/deployPolAmoy.ts --network polygonAmoy
